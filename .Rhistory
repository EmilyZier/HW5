bxz = mod4$coef[4]
marg.dy.dx = bx * bxz * educ.sim
var.bx = vcov(mod4)[2,2]
var.bxz = vcov(mod4)[4,4]
cov.bx.bxz = vcov(mod4)[4,2]
var.dy.dx = var.bx + educ.sim^2 * var.bxz + 2*educ.sim*cov.bx.bxz
plot(marg.dy.dx)
marg.dy.cx
marg.dy.dx
plot(marg.dy.dx~educ.sim)
plot(marg.dy.dx~educ.sim)
plot(marg.dy.dx)
plot(marg.dy.dx~educ.sim,pch=21)
plot(marg.dy.dx~educ.sim,pch=19)
plot(marg.dy.dx~educ.sim,pch=21)
marg.dy.dx / sqrt(var.dy.dx)
plot(marg.dy.dx / sqrt(var.dy.dx))
summary(mod4)
summary(mod4)
summary(lm(prestige~education*income))
summary(lm(prestige~education*income),occup)
summary(lm(prestige~education*income,occup))
marg.dy.dx / sqrt(var.dy.dx)
t.obs.bxz = marg.dy.dx / sqrt(var.dy.dx)
pt(t.obs.bxz)
pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4)))
2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4))))
plot(2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4)))))
plot(2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4)))),ylim=c(0,1))
abline(h=0.05,col='red')
abline(h=0.05,col='red',type='d)
abline(h=0.05,col='red',type='d')
abline(h=0.05,col='red',type='d')
abline(h=0.05,col='red',lty='d')
plot(2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4)))),ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
plot(2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4)))),ylim=c(0,1) ~ sim.educ)
abline(h=0.05,col='red',lty=2)
plot(2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4))))~ sim.educ,ylim=c(0,1))
plot(2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4))))~ educ.sim,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
p.obs.bxz = 2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4)))
p.obs.bxz = 2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4))
plot()~ educ.sim,ylim=c(0,1))
p.obs.bxz = 2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4))
p.obs.bxz = 2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4))))
p.obs.bxz = 2 * (1-pt(t.obs.bxz,df=nrow(occup)-length(coef(mod4))))
plot(p.obx.bxz~ educ.sim,ylim=c(0,1))
plot(p.obs.bxz~ educ.sim,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
t.obs.bxz = marg.dy.dx / sqrt(var.dy.dx)
p.obs.bxz = 2 * (1-pt(abs(t.obs.bxz),df=nrow(occup)-length(coef(mod4))))
plot(p.obs.bxz~ educ.sim,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
coeftest(mod4)
library("lmtest")
coeftest(mod4)
summary(mod4)
sl_slopes <- coef(mod4)['income'] +
coef(mod4)['income:education'] * educ.sim
sl_slopes
library(msm)
install.packages("msm")
library(msm)
mod4_estmean<-coef(mod4)
mod4_var<-vcov(mod4)
SEs <- rep(NA, length(educ.sim))
for (i in 1:length(educ.sim)){
j <- educ.sim[i]
SEs[i] <- deltamethod(~ (x2) + (x10)*j, mod4_estmean, mod4_var)
}
inc_slopes
inc_slopes <- coef(mod4)['income'] +
coef(mod4)['income:education'] * educ.sim
inc_slopes
inc_slopes <- coef(mod4)['income'] +
coef(mod4)['income:education'] * educ.sim
library(msm)
mod4_estmean<-coef(mod4)
mod4_var<-vcov(mod4)
SEs <- rep(NA, length(educ.sim))
for (i in 1:length(educ.sim)){
j <- educ.sim[i]
SEs[i] <- deltamethod(~ (coef(mod4)['income']) + (coef(mod4)['income:education'])*j, mod4_estmean, mod4_var)
}
coef(mod4)['income']
as.numeric(coef(mod4)['income'])
mod4_estmean<-coef(mod4)
mod4_var<-vcov(mod4)
SEs <- rep(NA, length(educ.sim))
for (i in 1:length(educ.sim)){
j <- educ.sim[i]
SEs[i] <- deltamethod(~ (as.numeric(coef(mod4)['income'])) + (as.numeric(coef(mod4)['income:education']))*j, mod4_estmean, mod4_var)
}
mod4_estmean<-coef(mod4)
mod4_var<-vcov(mod4)
SEs <- rep(NA, length(educ.sim))
for (i in 1:length(educ.sim)){
j <- educ.sim[i]
SEs[i] <- deltamethod (~ (x2) + (x4)*j, mod4_estmean, mod4_var)
}
upper <- inc_slopes + 1.96*SEs
lower <- inc_slopes - 1.96*SEs
cbind(educ.sim, inc_slopes, upper, lower)
plot(educ.sim, inc_slopes, type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of Education", ylab = "Marginal Effect of Income")
plot(educ.sim, inc_slopes, type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of Education", ylab = "Marginal Effect of Income")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(at.socst)), type = "l", col = "gray")
plot(educ.sim, inc_slopes, type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of Education", ylab = "Marginal Effect of Income")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
SEs
var.dy.dx
var.dy.dx^2
sqrt(var.dy.dxs)
sqrt(var.dy.dx)
SEs
SEs == sqrt(var.dy.dx)
plot(SEs~sqrt(var.dy.dx))
upper <- marg.dy.dx + 1.96*sqrt(var.dy.dx)
lower <- marg.dy.dx - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc_slopes, type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of Education", ylab = "Marginal Effect of Income")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
plot(educ.sim, marg.dy.dx , type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of Education", ylab = "Marginal Effect of Income")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
marg.dy.dx
inc_slopes
educ.sim = seq(1:100)
bx = mod4$coef[2]
bxz = mod4$coef[4]
inc.slopes = bx * bxz * educ.sim
plot(marg.dy.dx~educ.sim,pch=21)
educ.sim = seq(1:100)
bx = mod4$coef[2]
bxz = mod4$coef[4]
inc.slopes = bx * bxz * educ.sim
#compute variance for interaction term
var.bx = vcov(mod4)[2,2]
var.bxz = vcov(mod4)[4,4]
cov.bx.bxz = vcov(mod4)[4,2]
var.dy.dx = var.bx + educ.sim^2 * var.bxz + 2*educ.sim*cov.bx.bxz
#compute t.obs for income at different levels of educ
t.obs.bxz = marg.dy.dx / sqrt(var.dy.dx)
p.obs.bxz = 2 * (1-pt(abs(t.obs.bxz),df=nrow(occup)-length(coef(mod4))))
plot(p.obs.bxz~ educ.sim,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
upper <- inc.slopes + 1.96*sqrt(var.dy.dx)
lower <- inc.slopes - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc.slopes , type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of Education", ylab = "Marginal Effect of Income")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
plot(educ.sim, inc.slopes , type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of Education", ylab = "Marginal Effect of Income")
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-2,2))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
mod4
slopes <- mod4$coef[2] + mod4$coef[4]*educ.sim
slopes
estmean<-coef(mod4)
var<-vcov(mod4)
SEs <- rep(NA, length(educ.sim))
for (i in 1:length(educ.sim)){
j <- educ.sim[i]
SEs[i] <- deltamethod (~ (x2) + (x4)*j, estmean, var)
}
upper <- slopes + 1.96*SEs
lower <- slopes - 1.96*SEs
cbind(educ.sim, slopes, upper, lower)
plot(educ.sim, slopes, type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of SocSt", ylab = "Marginal Effect of Math")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
#compute marginal effect for different educ levels (educ = 1 to 100)
educ.sim = seq(1:100)
bx = mod4$coef[2]
bxz = mod4$coef[4]
inc.slopes = bx * bxz * educ.sim
#compute variance for interaction term
var.bx = vcov(mod4)[2,2]
var.bxz = vcov(mod4)[4,4]
cov.bx.bxz = vcov(mod4)[4,2]
var.dy.dx = var.bx + educ.sim^2 * var.bxz + 2*educ.sim*cov.bx.bxz
#compute t.obs for income at different levels of educ
t.obs.bxz = marg.dy.dx / sqrt(var.dy.dx)
p.obs.bxz = 2 * (1-pt(abs(t.obs.bxz),df=nrow(occup)-length(coef(mod4))))
plot(p.obs.bxz~ educ.sim,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
upper1 <- inc.slopes + 1.96*sqrt(var.dy.dx)
lower2 <- inc.slopes - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-2,2))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
cbind(educ.sim, inc.slopes, upper1, lower1)
lower1 <- inc.slopes - 1.96*sqrt(var.dy.dx)
#compute marginal effect for different educ levels (educ = 1 to 100)
educ.sim = seq(1:100)
bx = mod4$coef[2]
bxz = mod4$coef[4]
inc.slopes = bx * bxz * educ.sim
#compute variance for interaction term
var.bx = vcov(mod4)[2,2]
var.bxz = vcov(mod4)[4,4]
cov.bx.bxz = vcov(mod4)[4,2]
var.dy.dx = var.bx + educ.sim^2 * var.bxz + 2*educ.sim*cov.bx.bxz
#compute t.obs for income at different levels of educ
t.obs.bxz = marg.dy.dx / sqrt(var.dy.dx)
p.obs.bxz = 2 * (1-pt(abs(t.obs.bxz),df=nrow(occup)-length(coef(mod4))))
plot(p.obs.bxz~ educ.sim,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
upper1 <- inc.slopes + 1.96*sqrt(var.dy.dx)
lower1 <- inc.slopes - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-2,2))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
cbind(educ.sim, inc.slopes, upper1, lower1)
upper1 <- inc.slopes + 1.96*sqrt(var.dy.dx)
lower1 <- inc.slopes - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-2,2))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
cbind(educ.sim, inc.slopes, upper1, lower1)
test = cbind(educ.sim, inc.slopes, upper1, lower1)
slopes <- mod4$coef[2] + mod4$coef[4]*educ.sim
estmean<-coef(mod4)
var<-vcov(mod4)
SEs <- rep(NA, length(educ.sim))
for (i in 1:length(educ.sim)){
j <- educ.sim[i]
SEs[i] <- deltamethod (~ (x2) + (x4)*j, estmean, var)
}
upper <- slopes + 1.96*SEs
lower <- slopes - 1.96*SEs
test2 = cbind(educ.sim, slopes, upper, lower)
head(test)
head(test2)
#compute marginal effect for different educ levels (educ = 1 to 100)
educ.sim = seq(1:100)
bx = mod4$coef[2]
bxz = mod4$coef[4]
inc.slopes = bx + bxz * educ.sim
#compute variance for interaction term
var.bx = vcov(mod4)[2,2]
var.bxz = vcov(mod4)[4,4]
cov.bx.bxz = vcov(mod4)[4,2]
var.dy.dx = var.bx + educ.sim^2 * var.bxz + 2*educ.sim*cov.bx.bxz
upper1 <- inc.slopes + 1.96*sqrt(var.dy.dx)
lower1 <- inc.slopes - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-2,2))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
test = cbind(educ.sim, inc.slopes, upper1, lower1)
slopes <- mod4$coef[2] + mod4$coef[4]*educ.sim
estmean<-coef(mod4)
var<-vcov(mod4)
SEs <- rep(NA, length(educ.sim))
for (i in 1:length(educ.sim)){
j <- educ.sim[i]
SEs[i] <- deltamethod (~ (x2) + (x4)*j, estmean, var)
}
upper <- slopes + 1.96*SEs
lower <- slopes - 1.96*SEs
test2 = cbind(educ.sim, slopes, upper, lower)
plot(educ.sim, slopes, type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of SocSt", ylab = "Marginal Effect of Math")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
head(test)
head(test2)
plot(educ.sim, slopes, type = "l", lty = 1, ylim = c(-.1, 1), xlab = "Level of SocSt", ylab = "Marginal Effect of Math")
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-2,2))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
pt(inc.slopes/sqrt(var.dy.dx),df=nrow(occup)-length(mod4))
1-pt(inc.slopes/sqrt(var.dy.dx),df=nrow(occup)-length(mod4))
2 * (1-pt(inc.slopes/sqrt(var.dy.dx),df=nrow(occup)-length(mod4)))
plot(2 * (1-pt(inc.slopes/sqrt(var.dy.dx),df=nrow(occup)-length(mod4))))
upper1 <- inc.slopes + 1.96*sqrt(var.dy.dx)
lower1 <- inc.slopes - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-1,1))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
plot(2 * (1-pt(abs(inc.slopes/sqrt(var.dy.dx)),df=nrow(occup)-length(mod4))))
plot(2 * (1-pt(abs(inc.slopes/sqrt(var.dy.dx)),df=nrow(occup)-length(mod4))),ylim=c(0,1))
plot(2 * (1-pt(abs(inc.slopes/sqrt(var.dy.dx)),df=nrow(occup)-length(mod4))),ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
p.vals = 2 * (1-pt(abs(inc.slopes/sqrt(var.dy.dx)),df=nrow(occup)-length(mod4))
plot(p.vals),ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
p.vals = 2 * (1-pt(abs(inc.slopes/sqrt(var.dy.dx)),df=nrow(occup)-length(mod4))
plot(p.vals,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
p.vals = 2 * (1-pt(abs(inc.slopes/sqrt(var.dy.dx)),df=nrow(occup)-length(mod4)))
plot(p.vals,ylim=c(0,1))
abline(h=0.05,col='red',lty=2)
p.vals = 2 * (1-pt(abs(inc.slopes/sqrt(var.dy.dx)),df=nrow(occup)-length(mod4)))
plot(p.vals~educ.sim,ylim=c(0,1),ylab='p-value',xlab='Education')
abline(h=0.05,col='red',lty=2)
upper1 <- inc.slopes + 1.96*sqrt(var.dy.dx)
lower1 <- inc.slopes - 1.96*sqrt(var.dy.dx)
plot(educ.sim, inc.slopes , type = "l", lty = 1, xlab = "Level of Education", ylab = "Marginal Effect of Income",ylim=c(-1,1))
points(educ.sim, upper, type = "l", lty = 2)
points(educ.sim, lower, type = "l", lty = 2)
points(educ.sim, rep(0, length(educ.sim)), type = "l", col = "gray")
la.dat = read.csv('Input/LA.csv')
head(la.dat)
la.dat$garage
la.dat$garage = ifelse(is.na(la.dat$garage),0,la.dat$garage)
la.dat.garage
la.dat$garage
la.dat$pool
la.dat$pool = ifelse(la.dat$pool=='Y',1,0)
la.dat$pool
head(la.dat)
la.dat$type
table(la.dat$type)
tapply(la.dat$price,la.dat$type,mean)
tapply(la.dat$price,la.dat$type,mean)
la.dat$type = ifelse(la.dat$type=='','Alternative',la.dat$type)
head(la.dat)
hist(la.dat$price)
hist(la.dat$price,breaks=1000)
hist(la.dat$sqft,breaks=1000)
hist(la.dat$price,breaks=100)
hist(la.dat$sqft,breaks=100)
hist(log(la.dat$price),breaks=100)
hist(log(la.dat$sqft),breaks=100)
par(mfrow=c(2,2))
hist(la.dat$price,breaks=100)
hist(la.dat$sqft,breaks=100)
hist(log(la.dat$price),breaks=100)
hist(log(la.dat$sqft),breaks=100)
lm(log(price) ~ log(sqft),la.dat)
summary(lamod <- lm(log(price) ~ log(sqft),la.dat))
summary(lamod <- lm(log(price) ~ log(sqft) + bed,la.dat))
summary(lamod <- lm(log(price) ~ log(sqft) + bed + bath,la.dat))
summary(lamod <- lm(log(price) ~ log(sqft) + bed + bath + pool,la.dat))
summary(lamod <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage,la.dat))
head(lamod)
head(la.dat)
summary(lamod <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage + type,la.dat))
la.dat$type
la.dat = read.csv('Input/LA.csv')
#if no garage, recode from NA to 0
la.dat$garage = ifelse(is.na(la.dat$garage),0,la.dat$garage)
#recode pool: if "Y" --> 1, if " " --> 0
la.dat$pool = ifelse(la.dat$pool=='Y',1,0)
tapply(la.dat$price,la.dat$type,mean)
la.dat$type = ifelse(la.dat$type=='','Alternative',as.character(la.dat$type))
summary(lamod <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage + type,la.dat))
summary(lamod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage,la.dat))
la.dat$type
summary(lamod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage,la.dat))
summary(lamod1 <- lm(log(price) ~ log(sqft) + type + bed + bath + pool + garage,la.dat))
summary(lamod2 <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage,la.dat))
anova(lamod1,lamod2)
la.dat$bed.bath = la.dat$bed+la.dat$bath
summary(lamod3 <- lm(log(price) ~ log(sqft)*type + bed.bath + pool + garage,la.dat))
anova(lamod1,lamod2,lamod3)
anova(lamod2,lamod3)
anova(lamod3,lamod2)
BIC(lamod1,lamod2,lamod3)
head(la.dat)
table(la.dat$garage)
la.dat$has.garage = ifelse(la.dat$garage>0,1,0)
summary(la.mod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage,la.dat))
summary(la.mod1 <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + has.garage,la.dat))
summary(la.mod1 <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
BIC(la.mod,la.mod1)
summary(la.mod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod2 <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage +
log(sqft):garage,la.dat))
BIC(la.mod,la.mod2)
summary(la.mod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod2 <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod3 <- lm(log(price) ~ log(sqft) + type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
BIC(la.mod,la.mod2,la.mod3)
summary(la.mod3)
summary(la.mod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod2 <- lm(log(price) ~ log(sqft) + type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod3 <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage +
log(sqft):garage,la.dat))
BIC(la.mod,la.mod2,la.mod3)
summary(la.mod <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod2 <- lm(log(price) ~ log(sqft) + type + bed + bath + pool + garage +
log(sqft):garage,la.dat))
summary(la.mod3 <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage +
log(sqft):garage,la.dat))
BIC(la.mod,la.mod2,la.mod3)
screenreg(list(la.mod1,la.mod2,la.mod3))
library(texreg)
screenreg(list(la.mod1,la.mod2,la.mod3))
?screenreg
library(stargazer)
stargazer(list(la.mod1,la.mod2,la.mod3))
?"stargazer"
stargazer(list(la.mod1,la.mod2,la.mod3),type='text')
kable(stargazer(list(la.mod1,la.mod2,la.mod3),type='text'))
library(stargazer);library(knitr)
kable(stargazer(list(la.mod1,la.mod2,la.mod3),type='text'))
stargazer(list(la.mod1,la.mod2,la.mod3),type='text')
stargazer(la.mod1,la.mod2,la.mod3,type='text')
stargazer(la.mod1,la.mod2,la.mod3,type='text',dep.var.labels = NA,
column.labels = c('M1',"M2","M3"))
stargazer(la.mod1,la.mod2,la.mod3,type='text',
column.labels = c('M1',"M2","M3"))
stargazer(la.mod1,la.mod2,la.mod3,type='text',
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
library(stargazer);library(knitr)
stargazer(la.mod1,la.mod2,la.mod3,type='text',summary.stat = c('bic','aic','rse'),
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
stargazer(la.mod1,la.mod2,la.mod3,type='text',keep.stat = c('bic','aic'),
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
stargazer(la.mod1,la.mod2,la.mod3,type='text',keep.stat = c('all'),
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
library(stargazer);library(knitr)
stargazer(la.mod1,la.mod2,la.mod3,type='text',omit.stat=c("f", "ser"),
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
stargazer(la.mod1,la.mod2,la.mod3,type='text',omit.stat=c("f", "r2"),
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
stargazer(la.mod1,la.mod2,la.mod3,type='text',omit.stat=c("f", "R2"),
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
stargazer(la.mod1,la.mod2,la.mod3,type='text',omit.stat=c("f", "rsq"),
column.labels = c('M1',"M2","M3"),model.names = F,model.numbers = F)
av.plot(la.mod3)
av.plot(la.mod3,pool)
hist(la.mod3$fitted.values)
hist(la.mod3$residuals)
par(mfrow=c(2,2))
hist(la.mod3$residuals,breaks=100)
par(mfrow=c(1,1))
hist(la.mod3$residuals,breaks=100)
plot(la.mod3)
plot(la.mod3)[1]
?plot.lm
plot(la.mod3,2)
plot(la.mod3,1)
plot(la.mod3,3)
plot(la.mod3,1)
la.mod3$fitted.values
log(la.dat$price)
plot(la.mod3,1)
plot(la.mod3,4)
plot(la.mod3,5)
plot(la.mod3,6)
plot(la.mod3,4)
plot(la.mod3,7)
plot(la.mod3,6)
plot(la.mod3,4)
plot(la.mod3,5)
plot(la.mod3,5)
summary(la.mod3)
exp(-0.10255)
exp(-0.54)
summary(la.mod4 <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage,
la.dat))
BIC(la.mod4)
BIC(la.mod3,la.mod4)
summary(la.mod3)
exp(0.304)
exp(0.048)
summary(la.mod1 <- lm(log(price) ~ log(sqft)*type + bed + bath + pool + garage,la.dat))
summary(la.mod2 <- lm(log(price) ~ log(sqft) + type + bed + bath + pool + garage,la.dat))
summary(la.mod3 <- lm(log(price) ~ log(sqft) + bed + bath + pool + garage,la.dat))
summary(la.mod3)
exp(-0.105)
la.dat$sqft
summary(la.mod3)
1.10^1.44
la.dat = read.csv('Input/LA.csv')
la.dat$garage
ifelse(is.na(la.dat$garage),0,la.dat$garage)
la.dat$garage
ifelse(is.na(la.dat$garage),0,ifelse(la.dat$garage=='',0,la.dat$garage))
ifelse(is.na(la.dat$garage),0,ifelse(la.dat$garage=='',0,as.character(la.dat$garage)))
table(ifelse(is.na(la.dat$garage),0,ifelse(la.dat$garage=='',0,as.character(la.dat$garage))))
ifelse(is.na(la.dat$garage),0,ifelse(la.dat$garage=='',0,ifelse(as.character(la.dat$garage)=='4+',4,as.character(la.dat$garage))))
table(ifelse(is.na(la.dat$garage),0,ifelse(la.dat$garage=='',0,ifelse(as.character(la.dat$garage)=='4+',4,as.character(la.dat$garage)))))
la.dat$garage = as.numeric(ifelse(is.na(la.dat$garage),0,ifelse(la.dat$garage=='',0,ifelse(as.character(la.dat$garage)=='4+',4,as.character(la.dat$garage)))))
table(la.dat$garage)
